---
layout: post
title:  "Bspwm"
date:   2016-01-15 00:49:37
description: ''
tags:
- linux
categories: 
- linux
---
### Bswpm_Nyasuh
<p align="center"><img itemprop="image"  src="/assets/img/bspwm.png" ></p>
### Need :
+ Lemonbar (panel)	
+ Conky
+ Urxvt
+ Nitrogen
+ Compton 
+ Sxhkd
+ Etc..  

### How to install ?
{% highlight ruby %}
# Cloning this repository and running make && sudo make install
$ git clone https://github.com/baskerville/bspwm.git
$ git clone https://github.com/baskerville/sxhkd.git
$ git clone https://github.com/baskerville/xtitle.git
$ git clone https://github.com/baskerville/sutils.git
$ git clone https://github.com/LemonBoy/bar.git
# dependecies
$ sudo apt-get install xcb libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libasound2-dev
$ sudo apt install rxvt-unicode-256color nitrogen compton conky
{% endhighlight %}

### Create ```~/.config/bspwm ``` and ```~/.config/sxhkd```
{% highlight ruby %}
$ nano ~/.config/bspwm/bspwmrc
{% endhighlight %}
#### Here is bspwmrc
{% highlight ruby %}
#!/bin/bash
iki="~/.config/bspwm"
ws1= 
ws2= 
ws3=
ws4= 


bspc monitor -d $ws1 $ws2 $ws3 $ws4


desktop_config() {
    bspc config $1 $2
    for M in $(bspc query -M); do
        bspc config -m $M $1 $2
    done
}
desktop_config border_width 2
desktop_config window_gap 50


bspc config split_ratio         0.50
bspc config borderless_monocle  true
bspc config gapless_monocle     true
bspc config focus_by_distance   true
bspc config focus_follows_pointer true
bspc config focused_border_color "#4FD3E3"



bspc rule -a Gimp desktop=^3 floating=on
bspc rule -a firefox=^2
bspc rule -a vlc floating=on
bspc rule -a Thunar desktop=^1
bspc rule -a Vlc desktop=^3
bspc rule -a Nitrogen desktop=^4


bash $iki/panel &
mpd &
nitrogen --restore &
sxhkd  &
xrdb ~/.config/Xdef & 
compton &
{% endhighlight %}

### sxhkdrc 
{% highlight ruby %}
$ nano ~/.config/sxhkd/sxhkdrc
{% endhighlight %}
{% highlight ruby %}
# bspwm hotkeys

super + alt + Escape
	bspc quit

super + w
	bspc window -c

super + t
	bspc desktop -l next

super + b
	bspc desktop -B

super + {s,f}
	bspc window -t {floating,fullscreen}

super + {grave,Tab}
	bspc {window,desktop} -f last

super + apostrophe
	bspc window -s last

super + {o,i}
	bspc control --record-history off; \
	bspc window {older,newer} -f; \
	bspc control --record-history on

super + y
	bspc window -w last.manual

super + m
	bspc window -s biggest

super + {_,shift + }{h,j,k,l}
	bspc window -{f,s} {left,down,up,right}

super + {_,shift + }c
	bspc window -f {next,prev}

super + {comma,period}
	bspc desktop -C {backward,forward}

super + bracket{left,right}
	bspc desktop -f {prev,next}

super + ctrl + {h,j,k,l}
	bspc window -p {left,down,up,right}

super + ctrl + {_,shift + }space
	bspc {window -p cancel,desktop -c}

super + alt + {h,j,k,l}
	bspc window -e {left -10,down +10,up -10,right +10}

super + alt + shift + {h,j,k,l}
	bspc window -e {right -10,up +10,down -10,left +10}

super + ctrl + {1-9}
	bspc window -r 0.{1-9}

super + {_,shift + }{1-9,0}
	bspc {desktop -f,window -d} ^{1-9,10}

~button1
	bspc pointer -g focus

super + button{1-3}
	bspc pointer -g {move,resize_side,resize_corner}

super + !button{1-3}
	bspc pointer -t %i %i

super + @button{1-3}
	bspc pointer -u


super + Return
	urxvt

super + space
	sh ~/.config/bspwm/bin/menu.sh	

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd
{% endhighlight %}

### panel :
{% highlight ruby %}
$ nano ~/.config/bspwm/panel
{% endhighlight %}
{% highlight ruby %}
#!/bin/bash
HERE="$HOME/.config/bspwm"
PANEL_FIFO=/tmp/panel-fifo
PANEL_HEIGHT=34
PANEL_FONT_FAMILY="envypn for powerline:size=12"
ICON_FONT="FontAwesome:size=9"
ICON_FONT2="FontAwesome:size=9"

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &

# clock
while true;
	do
		echo 'C ' $(date +"%l:%M %p");
	sleep 5;
done > "$PANEL_FIFO" &

# date
while true;
do echo 'D ' $(date +'%b %d')
	sleep 5
done > $PANEL_FIFO &
# battery
while true;
do
BATT_LEVEL=$(acpi -b | grep -o '[[:digit:]]\+%' | sed 's/%//')
	if [ $BATT_LEVEL -ge 80 ]
		then
			echo 'B' $BATT_LEVEL%
	fi

	if [ $BATT_LEVEL -ge 30 -a $BATT_LEVEL -lt 80 ]
		then
			echo 'B' $BATT_LEVEL%
	fi

	if [ $BATT_LEVEL -lt 30 ]
		then
			echo 'B%{T3}%{T1}' $BATT_LEVEL%
	fi


	sleep 30;
done > "$PANEL_FIFO" &

# alsa volume
while true;
do
ALSA_VOLUME=$(amixer get Master | grep 'Mono: Playback' | grep -o '...%' | sed 's/\[//' | sed 's/%//' | sed 's/ //')
ALSA_STATE=$(amixer get Master | grep 'Mono: Playback' | grep -o '\[on]')

if [ $ALSA_STATE ]
then
	if [ $ALSA_VOLUME -ge 70 ]
	then
		echo V'' $ALSA_VOLUME
	fi
	if [ $ALSA_VOLUME -gt 0 -a $ALSA_VOLUME -lt 70 ]
	then
		echo V'' $ALSA_VOLUME
	fi
	if [ $ALSA_VOLUME -eq 0 ]
	then
		echo V'' $ALSA_VOLUME
	fi
	else
		echo V'' $ALSA_VOLUME
	fi
	sleep 0.1
done > $PANEL_FIFO &


# power
echo P' Nyasuh ' > $PANEL_FIFO &

# powe
echo P' Nyasuh' > $PANEL_FIFO &

# music controls
while true;
do
	SONG_NAME=$(mpc | head -n1)
	if [[ -n $(mpc status | grep paused) ]]
	then
		echo "R%{T3}%{A:mpc prev:} %{A} %{A:mpc play:}  %{A}  %{A:mpc next:} %{A}%{T1} "
	else
		echo "R%{T3}%{A:mpc prev:} %{A} %{A:mpc pause:} %{A} %{A:mpc next:} %{A}%{T1} "
	fi

	sleep 1
done > $PANEL_FIFO &

while true;
	SONG_NAME=$(mpc | head -n1)
do echo 'X' $SONG_NAME
	sleep 1
done > $PANEL_FIFO &

source $HERE/panel_colors

cat "$PANEL_FIFO" | bash $HERE/panel_bar | lemonbar -g 1326x28+20+10 -f "$PANEL_FONT_FAMILY" -f "$ICON_FONT" -f "$ICON_FONT2" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -u 2 | bash &

wait

{% endhighlight %}

### panel_bar :
{% highlight ruby %}
$ nano ~/.config/bspwm/panel_bar
{% endhighlight %}

{% highlight ruby %}
#!/bin/sh
HERE="$HOME/.config/bspwm"
source $HERE/panel_colors

num_mon=$(bspc query -M | wc -l)
PADDING=" "

while read -r line ; do
	case $line in
		D*)
			# date output
			date="$PADDING${line#?}$PADDING"
			;;
		X*)
			music_info="%{B$COLOR_FOCUSED_OCCUPIED_DG}%{F$COLOR_FOCUSED_OCCUPIED_FG}$PADDING${line#?}$PADDING%{F-}%{B-}"
			;;
		R*)
			# music info
			music="%{B$COLOR_FOCUSED_OCCUPIED_BG}%{F$COLOR_FOCUSED_OCCUPIED_FG}$PADDING${line#?}$PADDING%{F-}%{B-}"
			;;
		C*)
			# clock output
			clock="%{B$COLOR_FOCUSED_OCCUPIED_DG}%{F$COLOR_FOCUSED_OCCUPIED_FG}$PADDING${line#?}$PADDING%{F-}%{B-}"
			;;

		B*)
			# battery percent output
			battery="%{A:bat.sh:}$PADDING${line#?}$PADDING%{A}"
			;;
		T*)
			# xtitle output
			title="${line#?}$PADDING$PADDING"
			;;

        F*)
            # free space /home
            free="$PADDING${line#?}$PADDING"
            ;;

		V*)
			# alsa volume
			volume="$PADDING${line#?}$PADDING"
			;;
		L*)
			# wifi link
			wifi="$PADDING${line#?}$PADDING"
			;;
		P*)
			# power
			power="%{B$COLOR_FOCUSED_OCCUPIED_BG}%{F$COLOR_FOCUSED_OCCUPIED_FG}$PADDING${line#?}$PADDING%{F-}%{B-}"
			;;
		Z*)
			# power
			powe="%{B$COLOR_FOCUSED_OCCUPIED_BG}%{F$COLOR_FOCUSED_OCCUPIED_FG}$PADDING${line#?}$PADDING%{F-}%{B-}"
			;;			

		W*)
			# bspwm internal state
			wm_infos=""
			IFS=':'
			set -- ${line#?}
			while [ $# -gt 0 ] ; do
				item=$1
				name=${item#?}
				case $item in
					M*)
						# active monitor
						if [ $num_mon -gt 1 ] ; then
							wm_infos="$wm_infos %{F$COLOR_ACTIVE_MONITOR_FG}%{B$COLOR_ACTIVE_MONITOR_BG}$PADDING${name}$PADDING%{B-}%{F-}  "
						fi
						;;
					m*)
						# inactive monitor
						if [ $num_mon -gt 1 ] ; then
							wm_infos="$wm_infos %{F$COLOR_INACTIVE_MONITOR_FG}%{B$COLOR_INACTIVE_MONITOR_BG}$PADDING${name}$PADDING%{B-}%{F-}  "
						fi
						;;
					O*)
						# focused occupied desktop
						wm_infos="${wm_infos}%{F$COLOR_FOCUSED_OCCUPIED_FG}%{B$COLOR_FOCUSED_OCCUPIED_BG}%{U$COLOR_FOREGROUND}%{+u}$PADDING${name}$PADDING%{-u}%{B-}%{F-}"
						;;
					F*)
						# focused free desktop
						wm_infos="${wm_infos}%{F$COLOR_FOCUSED_FREE_FG}%{B$COLOR_FOCUSED_FREE_BG}%{U$COLOR_FOREGROUND}%{+u}$PADDING${name}$PADDING%{-u}%{B-}%{F-}"
						;;
					U*)
						# focused urgent desktop
						wm_infos="${wm_infos}%{F$COLOR_FOCUSED_URGENT_FG}%{B$COLOR_FOCUSED_URGENT_BG}%{U$COLOR_FOREGROUND}%{+u}$PADDING${name}$PADDING%{-u}%{B-}%{F-}"
						;;
					o*)
						# occupied desktop
						wm_infos="${wm_infos}%{F$COLOR_OCCUPIED_FG}%{B$COLOR_OCCUPIED_BG}%{A:bspc desktop -f ${name}:}$PADDING${name}$PADDING%{A}%{B-}%{F-}"
						;;
					f*)
						# free desktop
						wm_infos="${wm_infos}%{F$COLOR_FREE_FG}%{B$COLOR_FREE_BG}%{A:bspc desktop -f ${name}:}$PADDING${name}$PADDING%{A}%{B-}%{F-}"
						;;
					u*)
						# urgent desktop
						wm_infos="${wm_infos}%{F$COLOR_URGENT_FG}%{B$COLOR_URGENT_BG}$PADDING${name}$PADDING%{B-}%{F-}"
						;;
				esac
				shift
			done
			;;
	esac
	printf "%s\n" "%{c}${wm_infos}%{l}${music}${music_info}%{r}${title}${battery}${date}${clock}${power}${powe}"
done

{% endhighlight %}

### panel_colors :
{% highlight ruby %}
$ nano ~/.config/bspwm/panel_colors
{% endhighlight %}

{% highlight ruby %}
COLOR_FOREGROUND='#FFA3A3AB'
COLOR_BACKGROUND='#FF263238'
COLOR_ACTIVE_MONITOR_FG='#FF252527'
COLOR_ACTIVE_MONITOR_BG='#FF58C5F1'
COLOR_INACTIVE_MONITOR_FG='#FF58C5F1'
COLOR_INACTIVE_MONITOR_BG='#FF263238'
COLOR_FOCUSED_OCCUPIED_FG='#FFF6F9FF'
COLOR_FOCUSED_OCCUPIED_BG='#FF01A2B5'
COLOR_FOCUSED_OCCUPIED_DG='#FF00ACBE'
COLOR_FOCUSED_FREE_FG='#FFF6F9FF'
COLOR_FOCUSED_FREE_BG='#FF10413D'
COLOR_FOCUSED_URGENT_FG='#FF252527'
COLOR_FOCUSED_URGENT_BG='#FFF9A299'
COLOR_OCCUPIED_FG='#FFA3A3AB'
COLOR_OCCUPIED_BG='#FF263238'
COLOR_FREE_FG='#FF6F7277'
COLOR_FREE_BG='#FF263238'
COLOR_URGENT_FG='#FFF9A299'
COLOR_URGENT_BG='#FF263238'
COLOR_LAYOUT_FG='#FFA3A3AB'
COLOR_LAYOUT_BG='#FF263238'
COLOR_TITLE_FG='#FFA3A3AB'
COLOR_TITLE_BG='#FF263238'
COLOR_STATUS_FG='#FFA3A3AB'
COLOR_STATUS_BG='#FF263238'
{% endhighlight %}

##### Don't forget make it executable
{% highlight ruby %}
$ cd ~/.config/bspwm
$ chmod +x bspwmrc panel panel_bar
{% endhighlight %}
#### My Dotfiles on github [nyasuh][config]
[config]: https://github.com/nyasuh/dot/tree/master/.config/bspwm
[bspwm]: /assets/img/bspwm.png